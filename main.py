#!/usr/bin/env python
# -*- coding: utf-8 -*-

# |------------------------ IMPORTS -------------------|
import os, re, io, logging, asyncio, shutil
from time import gmtime, strftime
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.storage import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage

# |------------------- LOCAL MODULES ------------------|
from config import BOSS_ID, TOKEN, PROXIE_URL, PROXIE_AUTH, PEOPLE, KEYBOARD, \
    KEYBOARD_CORONA, HH_KEYBOARD, WETHA_KEYBOARD, DEAL_KEYBOARD, CANCEL_KEYBOARD, YES_NO_KEYBOARD
from hh import get_hh_results
from speaking import free_talk
from wiki import search_in_wiki
from keyboards import ListOfButtons
from google_vision import get_photo_vision_result
from get import get_location, get_city_info, get_file
from google_custom_search import get_custom_search_result
from weather import get_weather, get_my_forecast, get_my_weather
from covid19_parser import get_world_corona_stats, get_russia_corona_stats
from states import JobForm, GoogleForm, WikiForm, WethaForm, SetCityForm, CooperationForm
from middleware import remember_user_start
from instagram import download_insta_post

# |---------------------- CODE ------------------------|

logging.basicConfig(level=logging.INFO)

loop = asyncio.get_event_loop()

bot = Bot(token=TOKEN)

storage = MemoryStorage()

dp = Dispatcher(bot, storage=storage, loop=loop)


# ================================================================================================== –°–¢–ê–†–¢ –•–ï–õ–ü
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ/–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await remember_user_start(message)
    await message.answer(PEOPLE['start_message'], reply_markup=KEYBOARD)


@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ/–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await message.answer(PEOPLE['start_message'], reply_markup=KEYBOARD)


# ================================================================================================== –ü–û–ì–û–î–ê
@dp.message_handler(lambda message: message.text == 'üå§ –ü–æ–≥–æ–¥–∞ üå§')
async def weather_main_button_handler(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –æ –ø–æ–≥–æ–¥–µ"""
    await message.answer("–ö–∞–∫ –ø–æ–≥–æ–¥–∫–∞?", reply_markup=WETHA_KEYBOARD)


@dp.callback_query_handler(lambda callback_query: True, state=WethaForm.city)
async def wetha_city_call_handler(callback_query: types.CallbackQuery, state: FSMContext):
    if callback_query.data:

        city_codes = {
            '2': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            '1': '–ú–æ—Å–∫–≤–∞',
            '4': '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'
        }

        await callback_query.message.answer(await get_weather(city_codes[callback_query.data[-1]], True))
        await callback_query.message.answer(await get_weather(city_codes[callback_query.data[-1]], False))

        await state.reset_state(with_data=False)
    else:
        await callback_query.message.answer("–ß—Ç–æ-—Ç–æ —Ç—ã –Ω–µ —Ç–æ –Ω–∞–∂–∞–ª, –¥—Ä—É–≥")
        await state.reset_state(with_data=False)


@dp.message_handler(state=WethaForm.city)
async def wetha_city_text_handler(message: types.Message, state: FSMContext):
    await message.answer(await get_weather(message.text, True))
    await message.answer(await get_weather(message.text, False))
    await state.reset_state(with_data=False)


# ================================================================================================== –†–ê–ë–û–¢–ê
@dp.message_handler(lambda message: message.text == 'üí∏ –†–∞–±–æ—Ç–∞ üí∏')
async def job_handler(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ 7 –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π"""
    await JobForm.job.set()
    await message.answer("–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –∏—â–µ—à—å?")


@dp.message_handler(state=JobForm.job)
async def job_name_handler(message: types.Message, state: FSMContext):
    job_name = message.text
    await state.update_data(job=job_name)
    await JobForm.area.set()
    await message.answer("–ì–¥–µ –∏—Å–∫–∞—Ç—å?", reply_markup=HH_KEYBOARD)


@dp.callback_query_handler(lambda callback_query: True, state=JobForm.area)
async def area_job_handler(callback_query: types.CallbackQuery, state: FSMContext):
    if callback_query.data.startswith("city"):
        data = await state.get_data()
        await callback_query.message.answer(await get_hh_results(callback_query.data[-1], data.get("job")))
        await state.reset_state(with_data=False)
    else:
        await callback_query.message.answer("–ß—Ç–æ-—Ç–æ —Ç—ã –Ω–µ —Ç–æ –Ω–∞–∂–∞–ª")
        await state.reset_state(with_data=False)


# ================================================================================================== –°–û–¢–†–£–î–ù–ò–ß–ï–°–¢–í–û
@dp.message_handler(lambda message: message.text == 'üíº –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ üíº')
async def coop_main_handler(message: types.Message):
    await CooperationForm.name.set()
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–æ—ë –∏–º—è –°—Ç–µ—Ñ–∞–Ω–∏ –∏ —è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–∞—Ä—å –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è.\
\n–î–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ì—Ä–∏–≥–æ—Ä–∏—è –æ –∂–µ–ª–∞–µ–º–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ,\
\n–í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–±–æ–ª—å—à—É—é —Ñ–æ—Ä–º—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –í–∞—à–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏.\
\n–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –í–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –í–∞–º –∏ (–ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏) –º–æ–µ–º—É —Å–æ–∑–¥–∞—Ç–µ–ª—é.")

    await message.answer("–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ–±—ã –ì—Ä–∏–≥–æ—Ä–∏–π –º–æ–≥ –ø–æ–Ω—è—Ç—å, –∫—Ç–æ –í—ã: ", reply_markup=CANCEL_KEYBOARD)


@dp.message_handler(state=CooperationForm.name)
async def coop_name_handler(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await CooperationForm.connect.set()
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–µ –¥–ª—è –í–∞—Å —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏\
\n(—ç–ª. –ø–æ—á—Ç–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü. —Å–µ—Ç–∏): ", reply_markup=CANCEL_KEYBOARD)


@dp.message_handler(state=CooperationForm.connect)
async def coop_name_handler(message: types.Message, state: FSMContext):
    await state.update_data(connect=message.text)
    await CooperationForm.deal_text.set()
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ (–∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ) –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∑–∞–∫–∞–∑, –ø—Ä–æ—Å—å–±—É –∏–ª–∏ –¥—Ä—É–≥–æ–µ (—É–∫–∞–∂–∏—Ç–µ).\
\n–ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –≥–æ—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –ù–ï –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –µ–≥–æ –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é,\
\n–í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.", reply_markup=CANCEL_KEYBOARD)


@dp.message_handler(state=CooperationForm.deal_text)
async def coop_deal_text_handler(message: types.Message, state: FSMContext):
    await state.update_data(deal_text=message.text)
    await CooperationForm.deal_doc_y_n.set()
    await message.answer("–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –¢–ó –∏–ª–∏ –¥—Ä—É–≥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?\
\n–î–ª—è –æ—Ç–≤–µ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏: ", reply_markup=YES_NO_KEYBOARD)


@dp.callback_query_handler(lambda callback_query: True, state=CooperationForm.deal_doc_y_n)
async def coop_deal_doc_y_n_handler(callback_query: types.CallbackQuery, state: FSMContext):
    if callback_query.data == 'yes':
        await state.update_data(deal_doc_y_n='yes')
        await CooperationForm.deal_doc.set()
        await callback_query.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–∏–Ω —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\
\n(—Ñ–æ—Ä–º–∞—Ç–∞ PDF, DOCX –∏ –¥—Ä.): ", reply_markup=CANCEL_KEYBOARD)

    elif callback_query.data == 'no':
        await state.update_data(deal_doc_y_n='no')
        await CooperationForm.money.set()
        await callback_query.message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –í–∞—à –±—é–¥–∂–µ—Ç, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã–π –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ì—Ä–∏–≥–æ—Ä–∏–µ–º: ", reply_markup=CANCEL_KEYBOARD)
    else:
        await CooperationForm.deal_doc_y_n.set()
        await callback_query.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç': ", reply_markup=YES_NO_KEYBOARD)


@dp.message_handler(content_types=types.ContentTypes.DOCUMENT, state=CooperationForm.deal_doc)
async def coop_deal_doc_handler(message: types.Message, state: FSMContext):
    await CooperationForm.money.set()
    await state.update_data(deal_doc=message.document.file_id)

    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –í–∞—à –±—é–¥–∂–µ—Ç, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã–π –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ì—Ä–∏–≥–æ—Ä–∏–µ–º: ",
                         reply_markup=CANCEL_KEYBOARD)


@dp.message_handler(state=CooperationForm.money)
async def coop_money_handler(message: types.Message, state: FSMContext):
    await state.update_data(money=message.text)
    await CooperationForm.send_y_n.set()
    state_data = await state.get_data()
    ap_time = strftime("%Y-%m-%d %H:%M:%S", gmtime())

    ap_name = state_data.get('name')
    ap_connect = state_data.get('connect')
    ap_deal_t = state_data.get('deal_text')
    ap_deal_y_n = state_data.get('deal_doc_y_n')
    if ap_deal_y_n == 'yes':
        y_n = '–î–∞'
    else:
        y_n = '–ù–µ—Ç'

    ap_money = state_data.get('money')

    result = f"""
===========================
–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç {ap_time}:

–ò–º—è: {ap_name}\n
–ö–æ–Ω—Ç–∞–∫—Ç—ã: {ap_connect}\n
–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: {ap_deal_t}\n
–§–∞–π–ª –æ–ø–∏—Å–∞–Ω–∏–µ: {y_n}
–ë—é–¥–∂–µ—Ç: {ap_money}
===========================
"""
    await message.answer(result)
    await message.answer("–ü–µ—Ä–µ–¥ –í–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ì—Ä–∏–≥–æ—Ä–∏—é,\
\n–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏, '–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É', –¥–ª—è –æ—Ç–º–µ–Ω—ã.", reply_markup=DEAL_KEYBOARD)


@dp.callback_query_handler(lambda callback_query: True, state=CooperationForm.send_y_n)
async def coop_send_y_n_handler(callback_query: types.CallbackQuery, state: FSMContext):
    if callback_query.data == 'confirm_deal_send':
        state_data = await state.get_data()
        ap_time = strftime("%Y-%m-%d %H:%M:%S", gmtime())

        ap_name = state_data.get('name')
        ap_connect = state_data.get('connect')
        ap_deal_t = state_data.get('deal_text')
        ap_deal_y_n = state_data.get('deal_doc_y_n')
        if ap_deal_y_n == 'yes':
            y_n = '–î–∞'
        else:
            y_n = '–ù–µ—Ç'

        ap_money = state_data.get('money')

        result = f"""
===========================
–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç {ap_time}:

–ò–º—è: {ap_name}\n
–ö–æ–Ω—Ç–∞–∫—Ç—ã: {ap_connect}\n
–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: {ap_deal_t}\n
–§–∞–π–ª –æ–ø–∏—Å–∞–Ω–∏–µ: {y_n}
–ë—é–¥–∂–µ—Ç: {ap_money}
===========================
"""
        await bot.send_message(BOSS_ID, result)

        if ap_deal_y_n == "yes":
            ap_deal_f = state_data.get('deal_doc')
            await bot.send_document(BOSS_ID, ap_deal_f)

        await callback_query.message.answer("–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ,\
–≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ì—Ä–∏–≥–æ—Ä–∏–π —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è, —Å–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –≤—Ä–µ–º—è!", reply_markup=KEYBOARD)
        await state.reset_state(with_data=False)

    elif callback_query.data == 'cancel_deal_send':
        await state.reset_state(with_data=False)
        await callback_query.message.answer(
            "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±—Ä–∞—â–µ–Ω–∏—è, –º–æ–∂–µ—Ç –±—ã—Ç—å, –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑, —Å–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –≤—Ä–µ–º—è!", reply_markup=KEYBOARD)
    else:
        await CooperationForm.send_y_n.set()
        await callback_query.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É: ",
                                            reply_markup=DEAL_KEYBOARD)


# ================================================================================================== –ì–£–ì–õ
@dp.message_handler(lambda message: message.text == 'üîé –ì—É–≥–ª üîé')
async def custom_google_handler(message: types.Message):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å Google"""
    await GoogleForm.query.set()
    await message.answer("–ß—Ç–æ –Ω–∞–π—Ç–∏?")


@dp.message_handler(state=GoogleForm.query)
async def google_query_handler(message: types.Message, state: FSMContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞ Google"""
    await state.reset_state(with_data=False)
    await message.answer(await get_custom_search_result(message.text.lower()), reply_markup=KEYBOARD)


@dp.message_handler(content_types=types.ContentType.PHOTO)
async def vision_google_handler(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Google Web –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    await message.answer(await get_photo_vision_result(message), reply_markup=KEYBOARD)


# ================================================================================================== –í–ò–ö–ò
@dp.message_handler(lambda message: message.text == 'üîÆ –í–∏–∫–∏ üîÆ')
async def wiki_handler(message: types.Message):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å Wikipedia"""
    await WikiForm.query.set()
    await message.answer("–ß—Ç–æ –Ω–∞–π—Ç–∏?")


@dp.message_handler(state=WikiForm.query)
async def wiki_query_handler(message: types.Message, state: FSMContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏–∑ —Å—Ç–∞—Ç—å–∏ Wikipedia"""
    await state.reset_state(with_data=False)
    await message.answer(await search_in_wiki(message.text.lower()), reply_markup=KEYBOARD)


# ================================================================================================== –ú–û–Ø –ü–û–ì–û–î–ê
@dp.message_handler(lambda message: message.text == '‚òÇÔ∏è –ú–æ—è –ø–æ–≥–æ–¥–∞ ‚òÇÔ∏è')  # –º–æ—è –ø–æ–≥–æ–¥–∞
async def my_weather_handler(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –æ –ø–æ–≥–æ–¥–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    await message.answer(await get_my_forecast(message), reply_markup=KEYBOARD)


# ================================================================================================== –ú–û–ô –ü–†–û–ì–ù–û–ó
@dp.message_handler(lambda message: message.text == '‚õÖÔ∏è –ú–æ–π –ø—Ä–æ–≥–Ω–æ–∑ ‚õÖÔ∏è')  # –º–æ–π –ø—Ä–æ–≥–Ω–æ–∑
async def my_forecast_handler(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    await message.answer(await get_my_weather(message), reply_markup=KEYBOARD)


# ================================================================================================== –ö–û–†–û–ù–ê–í–ò–†–£–°
@dp.message_handler(lambda message: message.text == 'üêâ –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å üêâ')  # –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å
async def my_forecast_handler(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ"""
    await message.answer("–ì–¥–µ –∏–º–µ–Ω–Ω–æ?", reply_markup=KEYBOARD_CORONA)


# ================================================================================================== –ò–ù–°–¢–ê
@dp.message_handler(lambda message: message.text.startswith("https://www.instagram.com/p/"))  # –∏–Ω—Å—Ç–∞
async def insta_downloader_handler(message: types.Message):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞ –∏–Ω—Ç–∞–≥—Ä–∞–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —é–∑–µ—Ä—É"""
    photos = download_insta_post(message.text)
    for file in photos:
        with open(file, 'rb') as file_:
            await bot.send_document(message.chat.id, file_, disable_notification=True)

    path = os.path.join(os.path.abspath(os.path.dirname(__file__)), "post")
    shutil.rmtree(path)


# ================================================================================================== –ì–ï–û–õ–û–ö–ê–¶–ò–Ø
@dp.message_handler(content_types=types.ContentType.LOCATION, state=SetCityForm.city)
async def location_handler(message: types.Message, state: FSMContext):
    """–ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –≥–æ—Ä–æ–¥ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏"""
    await message.answer(await get_location(message), reply_markup=KEYBOARD)
    await state.reset_state(with_data=False)


# ================================================================================================== –ú–û–ô –ì–û–†–û–î
@dp.callback_query_handler(lambda callback_query: True, state=SetCityForm.city)
async def city_name_call_handler(callback_query: types.CallbackQuery, state: FSMContext):
    if callback_query.data:

        city_codes = {
            '2': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            '1': '–ú–æ—Å–∫–≤–∞',
            '4': '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'
        }

        await callback_query.message.answer(
            await get_city_info(city_codes[callback_query.data[-1]], callback_query.message.chat.id))
        await state.reset_state(with_data=False)
    else:
        await callback_query.message.answer("–ß—Ç–æ-—Ç–æ —Ç—ã –Ω–µ —Ç–æ –Ω–∞–∂–∞–ª, –¥—Ä—É–≥")
        await state.reset_state(with_data=False)


@dp.message_handler(state=SetCityForm.city)
async def city_name_text_handler(message: types.Message, state: FSMContext):
    await message.answer(await get_city_info(message.text, message.chat.id))
    await state.reset_state(with_data=False)


# ================================================================================================== –ö–û–õ–õ–ë–ï–ö–ò –ë–ï–ó –°–¢–ï–ô–¢–û–í
@dp.callback_query_handler(lambda callback_query: True, state="*")
async def call_query_handler(callback_query: types.CallbackQuery, state: FSMContext):  # –∫–æ—Ä–æ–Ω–∞ —Ö—ç–Ω–¥–ª–µ—Ä
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ"""
    if callback_query.data == "corona_russia":
        await callback_query.message.answer(await get_russia_corona_stats(), reply_markup=KEYBOARD)

    elif callback_query.data == "corona_world":
        await callback_query.message.answer(await get_world_corona_stats(), reply_markup=KEYBOARD)

    elif callback_query.data == "my_wetha":
        await callback_query.message.answer(await get_my_weather(callback_query.message), reply_markup=KEYBOARD)

    elif callback_query.data == "my_forecast":
        await callback_query.message.answer(await get_my_forecast(callback_query.message), reply_markup=KEYBOARD)

    elif callback_query.data == "wetha_in":
        await WethaForm.city.set()
        await callback_query.message.answer("–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ? –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –≤–æ—Ç –∫—Ä–∞—Å–∏–≤—ã–µ –∫–Ω–æ–ø–∫–∏ :)",
                                            reply_markup=HH_KEYBOARD)
    elif callback_query.data == "my_city":
        await SetCityForm.city.set()
        await callback_query.message.answer(
            "–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ —Å–¥–µ–ª–∞—Ç—å —Ç–≤–æ–∏–º? –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–π –∫—Ä–∞—Å–∏–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é!",
            reply_markup=HH_KEYBOARD)
    elif callback_query.data == "cancel_movement":
        await state.reset_state(with_data=False)
        await callback_query.message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=KEYBOARD)
    else:
        await callback_query.message.answer("–ß—Ç–æ-—Ç–æ —Ç—ã –Ω–µ —Ç–æ –Ω–∞–∂–∞–ª, –¥—Ä—É–∂–∏—â–µ")


# ================================================================================================== –í–°–ï –û–°–¢–ê–õ–¨–ù–û–ï
@dp.message_handler()
async def everything_else_handler(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    await message.answer(free_talk(message.text.lower()), reply_markup=KEYBOARD)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
